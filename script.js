// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Ç—ä—Ä—Å–µ–Ω–µ –≤ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏
function filterInstitutions(searchTerm) {
    const cards = document.querySelectorAll('.institution-card');
    const term = searchTerm.toLowerCase();
    
    cards.forEach(card => {
        const searchData = card.getAttribute('data-search');
        if (searchData && searchData.toLowerCase().includes(term)) {
            card.style.display = 'block';
        } else if (term === '') {
            card.style.display = 'block';
        } else {
            card.style.display = 'none';
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—Ä—ä–∑–∫–∏—Ç–µ
function checkLinks() {
    const links = document.querySelectorAll('a[href^="http"]');
    links.forEach(link => {
        link.addEventListener('click', function(e) {
            console.log('–û—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –≤—Ä—ä–∑–∫–∞:', this.href);
        });
    });
}


// –§—É–Ω–∫—Ü–∏—è –∑–∞ –º–æ–±–∏–ª–Ω–æ –º–µ–Ω—é
function toggleMobileMenu() {
    const mobileMenu = document.querySelector('.mobile-menu');
    const toggleButton = document.querySelector('.mobile-menu-toggle');
    
    if (mobileMenu && toggleButton) {
        mobileMenu.classList.toggle('active');
        
        // –ü—Ä–æ–º—è–Ω–∞ –Ω–∞ –∏–∫–æ–Ω–∞—Ç–∞
        if (mobileMenu.classList.contains('active')) {
            toggleButton.innerHTML = '‚úï';
        } else {
            toggleButton.innerHTML = '‚ò∞';
        }
    }
}

// –ó–∞—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –º–æ–±–∏–ª–Ω–æ—Ç–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫ –∏–∑–≤—ä–Ω –Ω–µ–≥–æ
function closeMobileMenu() {
    const mobileMenu = document.querySelector('.mobile-menu');
    const toggleButton = document.querySelector('.mobile-menu-toggle');
    
    if (mobileMenu && mobileMenu.classList.contains('active')) {
        mobileMenu.classList.remove('active');
        if (toggleButton) {
            toggleButton.innerHTML = '‚ò∞';
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞
document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤—è–º–µ hover –µ—Ñ–µ–∫—Ç–∏ –∑–∞ –∫–∞—Ä—Ç–∏—Ç–µ
    const cards = document.querySelectorAll('.institution-card, .bank-card');
    cards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
        });
    });

    // –ò–∑–≤–∏–∫–≤–∞–º–µ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—Ä—ä–∑–∫–∏—Ç–µ
    checkLinks();
    
    
    // –î–æ–±–∞–≤—è–º–µ event listener –∑–∞ –º–æ–±–∏–ª–Ω–æ—Ç–æ –º–µ–Ω—é
    const toggleButton = document.querySelector('.mobile-menu-toggle');
    if (toggleButton) {
        toggleButton.addEventListener('click', toggleMobileMenu);
    }
    
    // –ó–∞—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –º–æ–±–∏–ª–Ω–æ—Ç–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫ –∏–∑–≤—ä–Ω –Ω–µ–≥–æ
    document.addEventListener('click', function(e) {
        const mobileMenu = document.querySelector('.mobile-menu');
        const toggleButton = document.querySelector('.mobile-menu-toggle');
        
        if (mobileMenu && toggleButton && 
            !mobileMenu.contains(e.target) && 
            !toggleButton.contains(e.target)) {
            closeMobileMenu();
        }
    });
    
    // –ó–∞—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –º–æ–±–∏–ª–Ω–æ—Ç–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫ –Ω–∞ –≤—Ä—ä–∑–∫–∞
    const mobileNavTabs = document.querySelectorAll('.mobile-nav-tab');
    mobileNavTabs.forEach(tab => {
        tab.addEventListener('click', closeMobileMenu);
    });
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ (–∞–∫–æ –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)
document.addEventListener('keydown', function(e) {
    // –ú–æ–∂–µ–º –¥–∞ –¥–æ–±–∞–≤–∏–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Ç—É–∫
    if (e.ctrlKey && e.key === 'k') {
        e.preventDefault();
        const searchInput = document.querySelector('.search-box input');
        if (searchInput) {
            searchInput.focus();
        }
    }
});

// –†–µ–∫–ª–∞–º–Ω–∞ –ª–µ–Ω—Ç–∞ —Å–ª–∞–π–¥—ä—Ä —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç
let currentSlide = 0;
let slideInterval;
const slides = [
    {
        title: "üèõÔ∏è –ù–ê–ü–ò - –ù–∞—Ü–∏–æ–Ω–∞–ª–Ω–∞ –∞–≥–µ–Ω—Ü–∏—è –∑–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ",
        subtitle: "–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏ —É—Å–ª—É–≥–∏ –∑–∞ –¥–∞–Ω—ä—á–Ω–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –∏ –æ—Ç—á–µ—Ç–∏",
        features: [],
        ctaText: "–í–ª–µ–∑—Ç–µ –≤ –ù–ê–ü–ò",
        ctaLink: "https://nap.bg"
    },
    {
        title: "ü§ñ –ù–°–ò –ê—Å–∏—Å—Ç–µ–Ω—Ç",
        subtitle: "AI –ø–æ–º–æ—â–Ω–∏–∫ –∑–∞ —Å—á–µ—Ç–æ–≤–æ–¥–Ω–∏ –∑–∞–¥–∞—á–∏ –∏ –∫–æ–Ω—Å—É–ª—Ç–∞—Ü–∏–∏",
        features: [],
        ctaText: "–ò–∑–ø—Ä–æ–±–≤–∞–π—Ç–µ",
        ctaLink: "https://nsiassistant.bg"
    },
    {
        title: "üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä –Ω–∞ —Å—á–µ—Ç–æ–≤–æ–¥–∏—Ç–µ–ª—è",
        subtitle: "–í–∞–∂–Ω–∏ —Å—Ä–æ–∫–æ–≤–µ –∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏",
        features: [],
        ctaText: "–í–∏–∂—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞",
        ctaLink: "calendar.html"
    },
    {
        title: "üèõÔ∏è –ï–¥–∏–Ω–µ–Ω –ø–æ—Ä—Ç–∞–ª",
        subtitle: "–í—Å–∏—á–∫–∏ –¥—ä—Ä–∂–∞–≤–Ω–∏ —É—Å–ª—É–≥–∏",
        features: [],
        ctaText: "–†–∞–∑–≥–ª–µ–¥–∞–π—Ç–µ",
        ctaLink: "index.html"
    },
    {
        title: "üè¶ –ë–∞–Ω–∫–æ–≤–∏ —É—Å–ª—É–≥–∏",
        subtitle: "–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ –±–∞–Ω–∫–∏—Ä–∞–Ω–µ",
        features: [],
        ctaText: "–í–∏–∂—Ç–µ –±–∞–Ω–∫–∏—Ç–µ",
        ctaLink: "banks.html"
    },
    {
        title: "‚öñÔ∏è –ü—Ä–∞–≤–Ω–∏ —É—Å–ª—É–≥–∏",
        subtitle: "–°—ä–¥–µ–±–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∏ –∫–æ–Ω—Å—É–ª—Ç–∞—Ü–∏–∏",
        features: [],
        ctaText: "–ü—Ä–∞–≤–Ω–∏ —É—Å–ª—É–≥–∏",
        ctaLink: "legal.html"
    },
    {
        title: "üßÆ –°—á–µ—Ç–æ–≤–æ–¥–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏",
        subtitle: "–ö–∞–ª–∫—É–ª–∞—Ç–æ—Ä–∏ –∏ –ø–æ–º–æ—â–Ω–∏—Ü–∏",
        features: [],
        ctaText: "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏",
        ctaLink: "tools.html"
    }
];

// –§—É–Ω–∫—Ü–∏–∏ –∑–∞ —Ä–µ–∫–ª–∞–º–Ω–∞—Ç–∞ –ª–µ–Ω—Ç–∞

// –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Å–ª–∞–π–¥
function createSlide(slideData, index) {
    // –û–ø—Ä–µ–¥–µ–ª—è–Ω–µ –Ω–∞ –∏–∫–æ–Ω–∞ —Å–ø–æ—Ä–µ–¥ –ø—Ä–æ–¥—É–∫—Ç–∞
    let icon = 'üì¢';
    if (slideData.title.includes('–ù–ê–ü–ò')) {
        icon = 'üèõÔ∏è';
    } else if (slideData.title.includes('–ù–°–ò –ê—Å–∏—Å—Ç–µ–Ω—Ç')) {
        icon = 'ü§ñ';
    } else if (slideData.title.includes('–ö–∞–ª–µ–Ω–¥–∞—Ä')) {
        icon = 'üìÖ';
    } else if (slideData.title.includes('–ï–¥–∏–Ω–µ–Ω –ø–æ—Ä—Ç–∞–ª')) {
        icon = 'üèõÔ∏è';
    } else if (slideData.title.includes('–ë–∞–Ω–∫–æ–≤–∏')) {
        icon = 'üè¶';
    } else if (slideData.title.includes('–ü—Ä–∞–≤–Ω–∏')) {
        icon = '‚öñÔ∏è';
    } else if (slideData.title.includes('–°—á–µ—Ç–æ–≤–æ–¥–Ω–∏')) {
        icon = 'üßÆ';
    }
    
    return `
        <div class="ad-banner-slide ${index === 0 ? 'slide-in' : ''}" data-slide="${index}">
            <div class="ad-banner-content">
                <div class="ad-banner-left">
                    <h3 class="ad-banner-title">${slideData.title}</h3>
                    <p class="ad-banner-subtitle">${slideData.subtitle}</p>
                </div>
                <div class="ad-banner-right">
                    <div class="ad-logo">${icon}</div>
                    <a href="${slideData.ctaLink}" class="ad-cta-button" target="${slideData.ctaLink.startsWith('http') ? '_blank' : '_self'}">
                        ${slideData.ctaText}
                    </a>
                </div>
            </div>
        </div>
    `;
}

// –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Å–ª–∞–π–¥—ä—Ä–∞
function updateSlider() {
    const adBanner = document.querySelector('.ad-banner');
    if (!adBanner) return;
    
    // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ —Å—Ç–∞—Ä–∏—Ç–µ —Å–ª–∞–π–¥–æ–≤–µ
    const existingSlides = adBanner.querySelectorAll('.ad-banner-slide');
    existingSlides.forEach(slide => slide.remove());
    
    // –î–æ–±–∞–≤—è–º–µ –Ω–æ–≤–∏—Ç–µ —Å–ª–∞–π–¥–æ–≤–µ
    slides.forEach((slideData, index) => {
        const slideElement = document.createElement('div');
        slideElement.innerHTML = createSlide(slideData, index);
        adBanner.appendChild(slideElement.firstElementChild);
    });
    
    updateSliderControls();
}

// –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ç–µ
function updateSliderControls() {
    const dotsContainer = document.querySelector('.ad-slider-dots');
    if (!dotsContainer) return;
    
    dotsContainer.innerHTML = '';
    slides.forEach((_, index) => {
        const dot = document.createElement('div');
        dot.className = `ad-slider-dot ${index === currentSlide ? 'active' : ''}`;
        dot.addEventListener('click', () => goToSlide(index));
        dotsContainer.appendChild(dot);
    });
    
    // –û–±–Ω–æ–≤—è–≤–∞–º–µ –±—É—Ç–æ–Ω–∏—Ç–µ
    const prevBtn = document.querySelector('.ad-slider-prev');
    const nextBtn = document.querySelector('.ad-slider-next');
    
    if (prevBtn) prevBtn.disabled = currentSlide === 0;
    if (nextBtn) nextBtn.disabled = currentSlide === slides.length - 1;
}

// –û—Ç–∏–≤–∞–Ω–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–µ–Ω —Å–ª–∞–π–¥
function goToSlide(index) {
    if (index < 0 || index >= slides.length) return;
    
    const slides = document.querySelectorAll('.ad-banner-slide');
    if (slides.length === 0) return;
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞ –∏–∑–ª–∏–∑–∞–Ω–µ
    slides[currentSlide].classList.add('slide-out');
    
    setTimeout(() => {
        // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ –∞–∫—Ç–∏–≤–Ω–∏—è –∫–ª–∞—Å –æ—Ç –≤—Å–∏—á–∫–∏ —Å–ª–∞–π–¥–æ–≤–µ
        slides.forEach(slide => {
            slide.classList.remove('slide-in', 'slide-out');
        });
        
        currentSlide = index;
        
        // –ü–æ–∫–∞–∑–≤–∞–º–µ –Ω–æ–≤–∏—è —Å–ª–∞–π–¥
        slides[currentSlide].classList.add('slide-in');
        updateSliderControls();
    }, 250);
}

// –°–ª–µ–¥–≤–∞—â —Å–ª–∞–π–¥
function nextSlide() {
    const nextIndex = (currentSlide + 1) % slides.length;
    goToSlide(nextIndex);
}

// –ü—Ä–µ–¥–∏—à–µ–Ω —Å–ª–∞–π–¥
function prevSlide() {
    const prevIndex = currentSlide === 0 ? slides.length - 1 : currentSlide - 1;
    goToSlide(prevIndex);
}

// –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—Ç–æ –ø—Ä–µ–≤–∫–ª—é—á–≤–∞–Ω–µ
function startSlider() {
    clearInterval(slideInterval);
    slideInterval = setInterval(nextSlide, 3000); // 3 —Å–µ–∫—É–Ω–¥–∏ –∑–∞ –ø–æ-–±—ä—Ä–∑–æ —Ä–µ–º–∏–Ω–∞–≤–∞–Ω–µ
}

// –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—Ç–æ –ø—Ä–µ–≤–∫–ª—é—á–≤–∞–Ω–µ
function stopSlider() {
    clearInterval(slideInterval);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —Ä–µ–∫–ª–∞–º–Ω–∞—Ç–∞ –ª–µ–Ω—Ç–∞
function initAdBanner() {
    checkAdBannerStatus();
    
    // –°—ä–∑–¥–∞–≤–∞–º–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ç–µ
    const adBanner = document.querySelector('.ad-banner');
    if (adBanner) {
        // –î–æ–±–∞–≤—è–º–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏
        const controlsHTML = `
            <div class="ad-slider-controls">
                <button class="ad-slider-btn ad-slider-prev" onclick="prevSlide()">‚Äπ</button>
                <button class="ad-slider-btn ad-slider-next" onclick="nextSlide()">‚Ä∫</button>
                <div class="ad-slider-dots"></div>
            </div>
        `;
        adBanner.insertAdjacentHTML('afterbegin', controlsHTML);
        
        // –û–±–Ω–æ–≤—è–≤–∞–º–µ —Å–ª–∞–π–¥—ä—Ä–∞
        updateSlider();
        
        // –î–æ–±–∞–≤—è–º–µ event listener –∑–∞ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ
        const closeButton = document.querySelector('.ad-banner-close');
        if (closeButton) {
            closeButton.addEventListener('click', closeAdBanner);
        }
        
        // –î–æ–±–∞–≤—è–º–µ hover –µ—Ñ–µ–∫—Ç–∏ –∑–∞ —Å–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—Ç–æ –ø—Ä–µ–≤–∫–ª—é—á–≤–∞–Ω–µ
        adBanner.addEventListener('mouseenter', stopSlider);
        adBanner.addEventListener('mouseleave', startSlider);
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Ç—ä—Ä—Å–µ–Ω–µ –≤ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞—Ç–∞
function filterMinistries() {
    const searchInput = event.target;
    const searchTerm = searchInput.value.toLowerCase();
    const mainMinistries = document.getElementById('mainMinistries');
    const otherMinistries = document.getElementById('otherMinistries');
    
    if (!searchInput || !mainMinistries || !otherMinistries) return;
    
    // –°—ä–±–∏—Ä–∞–º–µ –≤—Å–∏—á–∫–∏ —Ä–µ–¥–æ–≤–µ –æ—Ç –¥–≤–µ—Ç–µ —Å–µ–∫—Ü–∏–∏
    const allRows = [...mainMinistries.querySelectorAll('.ministry-row'), ...otherMinistries.querySelectorAll('.ministry-row')];
    
    allRows.forEach(row => {
        const title = row.querySelector('.ministry-title');
        const subtitle = row.querySelector('.ministry-subtitle');
        
        if (title && subtitle) {
            const titleText = title.textContent.toLowerCase();
            const subtitleText = subtitle.textContent.toLowerCase();
            const searchText = titleText + ' ' + subtitleText;
            
            if (searchText.includes(searchTerm)) {
                row.style.display = '';
                row.style.visibility = 'visible';
            } else {
                row.style.display = 'none';
                row.style.visibility = 'hidden';
            }
        }
    });
    
    // –ü—Ä–∏ –ø—Ä–∞–∑–Ω–æ —Ç—ä—Ä—Å–µ–Ω–µ –ø–æ–∫–∞–∑–≤–∞–º–µ –≤—Å–∏—á–∫–∏ —Ä–µ–¥–æ–≤–µ
    if (searchTerm === '') {
        allRows.forEach(row => {
            row.style.display = '';
            row.style.visibility = 'visible';
        });
    }
    
    // –ü–æ–∫–∞–∑–≤–∞–º–µ/—Å–∫—Ä–∏–≤–∞–º–µ –∑–∞–≥–ª–∞–≤–∏—è—Ç–∞ –Ω–∞ —Å–µ–∫—Ü–∏–∏—Ç–µ
    const mainTitle = mainMinistries.previousElementSibling;
    const otherTitle = otherMinistries.previousElementSibling;
    
    if (searchTerm === '') {
        if (mainTitle && mainTitle.tagName === 'H3') {
            mainTitle.style.display = 'block';
        }
        if (otherTitle && otherTitle.tagName === 'H3') {
            otherTitle.style.display = 'block';
        }
    } else {
        // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –∏–º–∞ –≤–∏–¥–∏–º–∏ —Ä–µ–¥–æ–≤–µ –≤ –≤—Å—è–∫–∞ —Å–µ–∫—Ü–∏—è
        const visibleMainRows = mainMinistries.querySelectorAll('.ministry-row[style*="flex"], .ministry-row:not([style*="none"])');
        const visibleOtherRows = otherMinistries.querySelectorAll('.ministry-row[style*="flex"], .ministry-row:not([style*="none"])');
        
        if (mainTitle && mainTitle.tagName === 'H3') {
            mainTitle.style.display = visibleMainRows.length > 0 ? 'block' : 'none';
        }
        if (otherTitle && otherTitle.tagName === 'H3') {
            otherTitle.style.display = visibleOtherRows.length > 0 ? 'block' : 'none';
        }
    }
}
